<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Forensic on My blog</title>
    <link>https://firelightflagboy.github.io/tags/forensic/</link>
    <description>Recent content in Forensic on My blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Mon, 03 Aug 2020 15:54:09 +0200</lastBuildDate>
    
	<atom:link href="https://firelightflagboy.github.io/tags/forensic/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Snowcrash - Level09</title>
      <link>https://firelightflagboy.github.io/posts/snowcrash/level09/</link>
      <pubDate>Mon, 03 Aug 2020 15:54:09 +0200</pubDate>
      
      <guid>https://firelightflagboy.github.io/posts/snowcrash/level09/</guid>
      <description>On connection, we have 2 files level09 and token.
First token is readable but it contains some non-printable char,
$ cat f4kmm6p|=�p�n��DB�Du{�� $ xxd token 0000000: 6634 6b6d 6d36 707c 3d82 7f70 826e 8382 f4kmm6p|=..p.n.. 0000010: 4442 8344 757b 7f8c 890a DB.Du{.... on the other hand, level09 require an argument.
$ ./level09 You need to provied only one arg. The argument is transformed into another string.
$ ./level09 aaaaa abcde $ .</description>
    </item>
    
    <item>
      <title>Snowcrash - Level00</title>
      <link>https://firelightflagboy.github.io/posts/snowcrash/level00/</link>
      <pubDate>Mon, 27 Jul 2020 22:51:34 +0200</pubDate>
      
      <guid>https://firelightflagboy.github.io/posts/snowcrash/level00/</guid>
      <description>On connection to level00, we arrive at an empty home directory
An interesting file Because we don&amp;rsquo;t have any file present in the home directory, we search for file related to the user flag00, our target.
First we search for with flag00 as owner
$ find / -user flag00 2&amp;gt;/dev/null /usr/sbin/john /rofs/usr/sbin/john Cesar, my old friend The file /usr/sbin/john contains an odd string but it&amp;rsquo;s not our password.
$ cat /usr/sbin/john cdiiddwpgswtgt  The filename john refer to a tool to find weak passwords of your users.</description>
    </item>
    
  </channel>
</rss>