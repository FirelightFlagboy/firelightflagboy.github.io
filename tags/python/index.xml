<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>python on My blog</title>
    <link>/tags/python/</link>
    <description>Recent content in python on My blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Tue, 18 Aug 2020 11:24:50 +0200</lastBuildDate>
    
	<atom:link href="/tags/python/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>How to create a Minecraft server using Docker</title>
      <link>/posts/docker-minecraft/</link>
      <pubDate>Tue, 18 Aug 2020 11:24:50 +0200</pubDate>
      
      <guid>/posts/docker-minecraft/</guid>
      <description>Introduction I want to create a Minecraft server using docker.
For this tutorial, I&amp;rsquo;ll use Minecraft version 1.16.1.
The goal of this tutorial:
 Create a Minecraft server Use Docker to run the server in a container Being able to select the version of the server  The API Minecraft has an API to access and retrieve every available version.
The version manifest is available here, as you can see it&amp;rsquo;s a plain json file that contains all versions published.</description>
    </item>
    
    <item>
      <title>Snowcrash - Level10</title>
      <link>/posts/snowcrash/level10/</link>
      <pubDate>Mon, 03 Aug 2020 15:55:09 +0200</pubDate>
      
      <guid>/posts/snowcrash/level10/</guid>
      <description>On connection, we are greeted by the 2 following file.
$ ls -l total 16 -rwsr-sr-x+ 1 flag10 level10 10817 Mar 5 2016 level10 -rw------- 1 flag10 flag10 26 Mar 5 2016 token Pseudo code The following Pseudo code is generated from level10
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49  int main(int argc, char **argv) { char *host; char *file; int socketfd; int fd; int rc; char buffer [4096]; sockaddr_in addr; if (argc &amp;lt; 3) { errx(1, &amp;#34;%s file host\n\tsends file to host if you have access to it\n&amp;#34;, argv[0]); } file = argv[1]; host = argv[2]; if (access(argv[1], R_OK) == 0) { printf(&amp;#34;Connecting to %s:6969 .</description>
    </item>
    
    <item>
      <title>Snowcrash - Level09</title>
      <link>/posts/snowcrash/level09/</link>
      <pubDate>Mon, 03 Aug 2020 15:54:09 +0200</pubDate>
      
      <guid>/posts/snowcrash/level09/</guid>
      <description>On connection, we have 2 files level09 and token.
First token is readable but it contains some non-printable char,
$ cat f4kmm6p|=�p�n��DB�Du{�� $ xxd token 0000000: 6634 6b6d 6d36 707c 3d82 7f70 826e 8382 f4kmm6p|=..p.n.. 0000010: 4442 8344 757b 7f8c 890a DB.Du{.... on the other hand, level09 require an argument.
$ ./level09 You need to provied only one arg. The argument is transformed into another string.
$ ./level09 aaaaa abcde $ .</description>
    </item>
    
  </channel>
</rss>